---
- name: Verify
  hosts: all
  gather_facts: true
  vars:
    kubelet_for_all_users: true
    command_shell: bash
  tasks:
    - name: Set download directory if install only for the user
      set_fact:
        kubelet_download_dir: "{{ ansible_user_dir }}/bin"
      when: not kubelet_for_all_users | bool

    - name: Set download directory for all users to use
      set_fact:
        kubelet_download_dir: "/usr/local/bin"
      when: kubelet_for_all_users | bool

    - name: Find the kubelet file
      ansible.builtin.stat:
        path: "{{ kubelet_download_dir }}/kubelet"
      register: kubelet_file

    - name: Print stat info
      debug:
        msg: "{{ kubelet_file.stat }}"

    - name: Assert that kubelet exists
      assert:
        that: kubelet_file.stat.exists

    - name: Assert that kubelet is executable
      assert:
        that: kubelet_file.stat.executable

    - name: Establish the shell profile file if for the user
      set_fact:
        profile_file: "{{ ansible_user_dir }}/.{{ command_shell | lower }}rc"
      when: not kubelet_for_all_users

    - name: Establish the bash profile file if for all users
      set_fact:
        profile_file: /etc/profile
      when: kubelet_for_all_users | bool and command_shell | lower == "bash"

    - name: Establish the zsh profile file if for all users
      set_fact:
        profile_file: /etc/zshenv
      when: kubelet_for_all_users | bool and command_shell | lower == "zsh"

    - name: Find the profile file
      ansible.builtin.stat:
        path: "{{ profile_file }}"
      register: profile_file_reg

    - name: Assert that profile file exists
      assert:
        that: profile_file_reg.stat.exists

    - name: Assert that profile file is readable
      assert:
        that: profile_file_reg.stat.readable

    - name: Show the profile file
      command: cat "{{ profile_file }}"
      register: cat_reg
      no_log: true
      changed_when: false

    - name: Assert that autocompletion is configured
      assert:
        that: "'source <(kubelet completion {{ command_shell | lower }})' in cat_reg.stdout"
